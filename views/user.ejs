<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo App - User Profile</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            color: #333;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 0 20px;
        }

        header {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
            padding: 1rem 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: bold;
        }

        .nav-links {
            display: flex;
            list-style: none;
        }

        .nav-links li {
            margin-left: 2rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .nav-links a:hover {
            color: #ffdd40;
        }

        .logout-form {
            display: inline;
        }

        .logout-btn {
            background: none;
            border: none;
            color: white;
            font-weight: 500;
            cursor: pointer;
            font-size: 1rem;
            padding: 0;
            margin: 0;
            text-decoration: underline;
        }

        .logout-btn:hover {
            color: #ffdd40;
        }

        .profile-container {
            display: grid;
            grid-template-columns: 1fr 2fr;
            gap: 2rem;
            margin: 2rem 0 3rem;
        }

        .profile-card,
        .stats-card,
        .update-form {
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .profile-header {
            text-align: center;
            margin-bottom: 1.5rem;
        }

        .profile-avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0 auto 1rem;
            color: white;
            font-size: 2.5rem;
        }

        .profile-info {
            margin-bottom: 1.5rem;
        }

        .info-item {
            display: flex;
            justify-content: space-between;
            padding: 0.8rem 0;
            border-bottom: 1px solid #eee;
        }

        .info-item:last-child {
            border-bottom: none;
        }

        .info-label {
            font-weight: 500;
            color: #2c3e50;
        }

        .info-value {
            color: #7f8c8d;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .stat-item {
            text-align: center;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .stat-number {
            font-size: 1.8rem;
            font-weight: bold;
            color: #6a11cb;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 0.9rem;
            color: #7f8c8d;
        }

        h2 {
            color: #2c3e50;
            margin-bottom: 1.5rem;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            color: #2c3e50;
            font-weight: 500;
        }

        input {
            width: 100%;
            padding: 0.8rem;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
        }

        input:focus {
            outline: none;
            border-color: #6a11cb;
            box-shadow: 0 0 0 2px rgba(106, 17, 203, 0.2);
        }

        .btn {
            padding: 0.8rem 1.5rem;
            background: #6a11cb;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn:hover {
            background: #2575fc;
        }

        .btn-delete {
            background: #e74c3c;
        }

        .btn-delete:hover {
            background: #c0392b;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .error {
            background: #ffeaa7;
            color: #d63031;
            padding: 1rem;
            border-radius: 5px;
            margin-bottom: 1rem;
            display: none;
        }

        .success {
            background: #d1fae5;
            color: #065f46;
            padding: 1rem;
            border-radius: 5px;
            margin-bottom: 1rem;
            display: none;
        }

        .loading {
            text-align: center;
            color: #7f8c8d;
            font-style: italic;
        }

        @media (max-width: 768px) {
            .profile-container {
                grid-template-columns: 1fr;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .nav-links {
                display: none;
            }
        }
    </style>
</head>

<body>
    <header>
        <div class="container">
            <nav>
                <div class="logo">TodoApp</div>
                <ul class="nav-links">
                    <li><a href="/todos">My Todos</a></li>
                    <li><a href="/user">Profile</a></li>
                    <li>
                        <!-- <form action="/logout" method="POST" class="logout-form"> -->
                        <a href="/logout">Logout</a>
                        <!-- </form> -->
                    </li>
                </ul>
            </nav>
        </div>
    </header>

    <div class="container">
        <div class="profile-container">
            <div>
                <div class="profile-card">
                    <div class="profile-header">
                        <div class="profile-avatar" id="userInitial">
                            <%= user.email.charAt(0).toUpperCase() %>
                        </div>
                        <h2>User Profile</h2>
                    </div>
                    <div class="profile-info">
                        <div class="info-item">
                            <span class="info-label">Email:</span>
                            <span class="info-value" id="userEmail">
                                <%= user.email %>
                            </span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Member since:</span>
                            <span class="info-value" id="joinDate">
                                <%= new Date(user.createdAt).toLocaleDateString('en-US', { year: 'numeric' ,
                                    month: 'long' , day: 'numeric' }) %>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="stats-card">
                    <h2>Your Statistics</h2>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-number" id="totalTodos">
                                <%= stats.totalTodos %>
                            </div>
                            <div class="stat-label">Total Todos</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number" id="completedTodos">
                                <%= stats.completedTodos %>
                            </div>
                            <div class="stat-label">Completed</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number" id="pendingTodos">
                                <%= stats.pendingTodos %>
                            </div>
                            <div class="stat-label">Pending</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="update-form">
                <h2>Update Profile</h2>

                <div class="error" id="errorMessage"></div>
                <div class="success" id="successMessage"></div>

                <form id="profileForm">
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input type="email" id="email" name="email" value="<%= user.email %>">
                    </div>
                    <div class="form-group">
                        <label for="currentPassword">Current Password (required for changes)</label>
                        <input type="password" id="currentPassword" name="currentPassword"
                            placeholder="Enter current password">
                    </div>
                    <div class="form-group">
                        <label for="newPassword">New Password (optional)</label>
                        <input type="password" id="newPassword" name="newPassword" placeholder="Enter new password">
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword">Confirm New Password</label>
                        <input type="password" id="confirmPassword" name="confirmPassword"
                            placeholder="Confirm new password">
                    </div>

                    <div class="action-buttons">
                        <button type="submit" class="btn">Update Profile</button>
                        <button type="button" class="btn btn-delete" id="deleteAccount">Delete Account</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('profileForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const email = document.getElementById('email').value;
            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            // Hide previous messages
            document.getElementById('errorMessage').style.display = 'none';
            document.getElementById('successMessage').style.display = 'none';

            // Basic validation
            if (newPassword && newPassword !== confirmPassword) {
                document.getElementById('errorMessage').textContent = 'New passwords do not match';
                document.getElementById('errorMessage').style.display = 'block';
                return;
            }

            if (newPassword && newPassword.length < 6) {
                document.getElementById('errorMessage').textContent = 'New password must be at least 6 characters long';
                document.getElementById('errorMessage').style.display = 'block';
                return;
            }

            try {
                const response = await fetch('/user/profile', {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    // credentials:
                    body: JSON.stringify({ email, currentPassword, newPassword })
                });

                const result = await response.json();

                if (response.ok) {
                    document.getElementById('successMessage').textContent = result.message;
                    document.getElementById('successMessage').style.display = 'block';

                    // Clear password fields
                    document.getElementById('currentPassword').value = '';
                    document.getElementById('newPassword').value = '';
                    document.getElementById('confirmPassword').value = '';

                    // Update displayed email
                    document.getElementById('userEmail').textContent = email;
                    document.getElementById('userInitial').textContent = email.charAt(0).toUpperCase();
                } else {
                    document.getElementById('errorMessage').textContent = result.message || 'Update failed';
                    document.getElementById('errorMessage').style.display = 'block';
                }
            } catch (error) {
                document.getElementById('errorMessage').textContent = 'Error updating profile';
                document.getElementById('errorMessage').style.display = 'block';
            }
        });

        document.getElementById('deleteAccount').addEventListener('click', async () => {
            const password = prompt('Enter your password to confirm account deletion:');
            if (password) {
                if (confirm('Are you sure? This action cannot be undone. All your todos will be permanently deleted.')) {
                    try {
                        const response = await fetch('/user', {
                            method: 'DELETE',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ currentPassword: password })
                        });

                        if (response.ok) {
                            alert('Account deleted successfully. Redirecting to home page.');
                            window.location.href = '/';
                        } else {
                            const error = await response.json();
                            alert(error.message || 'Deletion failed');
                        }
                    } catch (error) {
                        alert('Error deleting account');
                    }
                }
            }
        });
    </script>
</body>

</html>